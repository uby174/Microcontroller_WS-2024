enum State{green, yellow, red, pedestrianGreen, pedestrianRed};
State _currentState = green;
State _targetState = pedestrianGreen;
int set;
int redState;
int time = 5000;

void setup()
{
  pinMode(12, OUTPUT);
  pinMode(11, OUTPUT);
  pinMode(2, INPUT);
  pinMode(4, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(5, OUTPUT);
  attachInterrupt(digitalPinToInterrupt(2), buttonPressed, CHANGE);
}
void loop()
{
  trafficLight();
}

void trafficLight()
{
  switch(_currentState)
  {
    case green:
    digitalWrite(12, HIGH);
 	digitalWrite(5, HIGH);
    delay(time);
    digitalWrite(5, LOW);
    _currentState = yellow;
    set = 0;
    break;
	case yellow:
 	digitalWrite(3, HIGH);
    delay(time/2);
    digitalWrite(3, LOW);
    if(set == 0)
      _currentState = red;
    if(set == 1)
      _currentState = green;
    break;
    case red:
 	digitalWrite(4, HIGH);
    delay(time);
    digitalWrite(4, LOW);
    _currentState = yellow;
    set = 1;
    break;
  }
}
 void pedestrian()
 {
   switch(_targetState)
  {
      case pedestrianGreen:
    	digitalWrite(4, HIGH);
    	digitalWrite(12, LOW);
        digitalWrite(11, HIGH);
    	delay(time*2);
        digitalWrite(11, LOW);
    	set = 0;
        _targetState = yellow;
        break;
      case yellow:
        digitalWrite(3, HIGH);
        delay(time/2);
        digitalWrite(3, LOW);
        _targetState = pedestrianRed;
        break;
      case pedestrianRed:
        digitalWrite(12, HIGH);
    	digitalWrite(4, LOW);
        break;
  }
 }


void buttonPressed()
{
  	if((digitalRead(2) == HIGH) && (_currentState == red))
    {
    	redState = 1;
    }
  	if((digitalRead(2) == HIGH) && (_targetState != pedestrianGreen))
    {
      redState = 0;
    }
} 
